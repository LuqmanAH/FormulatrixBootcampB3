#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!markdown

# LINQ Practice

Some examples of LINQ usage integrated to C# codes
can be used to simplify repetitive iteration such as **filtering**, **selecting**, **sorting**, or even averaging dataset

integrated to .NET Framework 3.0

Can be applied to primitve data implementing **IEnumerable** or **IQueryable** in C#

In the first portion of the notebook, LINQ will be implemented to IEnumerables and directly interacts with C#

#!csharp

List<int> intList = new List<int>();

for (var integer = 0; integer < 100; integer ++)
{
    intList.Add(integer);
}

var evenNumbers = intList.Where(n => n%2 == 0).ToList();
evenNumbers.ForEach(n => Console.WriteLine(n));

#!csharp

public class Employees
{
    public int ID {get; set;}
    public string FirstName {get; set;}
    public string LastName {get; set;}
    public int Salary {get; set;}
}

#!csharp

var registeredEmployees = new List<Employees>(){
    new Employees{ID = 101, FirstName = "Baba", LastName = "Wakwaw"},
    new Employees{ID = 110, FirstName = "Bibi", LastName = "Metong"},
    new Employees{ID = 112, FirstName = "Bebe", LastName = "Wekwew"},
    new Employees{ID = 121, FirstName = "Bubu", LastName = "Wukwuk"},
    new Employees{ID = 122, FirstName = "Bobo", LastName = "Wowo"}
};

#!csharp

var basicExtract = registeredEmployees.ToList();
var basicQuery = (from emp in registeredEmployees select emp)
                                    .ToList();

basicExtract.ForEach(n => Console.WriteLine($"{n.FirstName} {n.LastName}"));
basicQuery.ForEach(n => Console.WriteLine(n.ID));

#!csharp

var extract = (from emp in registeredEmployees
                select new Employees()
                {
                    FirstName = emp.FirstName,
                    LastName = emp.LastName
                });

foreach (var employee in extract)
{
    Console.WriteLine(employee.FirstName);
}
